{"org.springframework.cloud.sleuth.instrument.async.TraceAsyncAspect.traceBackgroundThread(org.aspectj.lang.ProceedingJoinPoint)":[],"travel2.controller.Travel2Controller.getTrainTypeByTripId(java.lang.String)":[],"other.repository.OrderOtherRepository.findByAccountId(java.util.UUID)":[],"consign.controller.ConsignController.findByConsignee(java.lang.String)":[],"foodsearch.controller.FoodController.createFoodOrder(foodsearch.domain.AddFoodOrderInfo)":[],"org.springframework.cloud.sleuth.instrument.messaging.TraceSpanMessagingAutoConfiguration.messagingSpanExtractor()":[],"other.controller.OrderOtherController.saveOrderInfo(other.domain.ChangeOrderInfo)":[],"inside_payment.async.ExecutorConfig.myAsync()":[],"sso.controller.AccountSsoController.findAllAccount()":[],"fdse.microservice.BasicApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"travel.controller.TravelController.delete(travel.domain.Information2)":[],"travel2.Travel2Application.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyControllerOrRestControllerWithPublicAsyncMethod()":[],"inside_payment.async.ExecutorConfig.mySimpleAsync()":[],"config.controller.ConfigController.delete(config.domain.Information2)":[],"order.controller.OrderController.securityInfoCheck(order.domain.GetOrderInfoForSecurity)":[],"ticketinfo.controller.TicketInfoController.queryForTravel(ticketinfo.domain.QueryForTravel)":[],"adminorder.controller.AdminOrderController.updateOrder(adminorder.domain.request.UpdateOrderRequest)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration.feignContextBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"order.repository.OrderRepository.findByTravelDateAndTrainNumber(java.util.Date,java.lang.String)":[],"adminroute.AdminRouteApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"other.controller.OrderOtherController.securityInfoCheck(other.domain.GetOrderInfoForSecurity)":[],"contacts.repository.ContactsRepository.findByAccountId(java.util.UUID)":[],"plan.RoutePlanApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"inside_payment.controller.InsidePaymentController.hello1_callback(java.lang.String)":[],"price.controller.PriceController.create(price.domain.CreateAndModifyPriceConfig)":[],"security.SecurityApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"com.trainticket.verificationcode.repository.VerificationCodeRepository.findByCookie(java.lang.String)":[],"adminbasic.controller.AdminBasicInfoController.modifyTrain(adminbasic.domin.bean.TrainType)":[],"travelplan.controller.TravelPlanController.getTransferResult(travelplan.domain.TransferTravelSearchInfo)":[],"travel2.controller.Travel2Controller.update(travel2.domain.Information)":[],"execute.controller.ExecuteControlller.home()":[],"travelplan.controller.TravelPlanController.getByMinStation(travelplan.domain.QueryInfo)":[],"org.springframework.cloud.sleuth.instrument.scheduling.TraceSchedulingAspect.traceBackgroundThread(org.aspectj.lang.ProceedingJoinPoint)":[],"assurance.controller.AssuranceController.getAssuranceById(assurance.domain.GetAssuranceById,java.lang.String,java.lang.String)":[],"consignprice.repository.ConsignPriceConfigRepository.findByIndex(int)":[],"adminorder.controller.AdminOrderController.addOrder(adminorder.domain.request.AddOrderRequest)":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration.defaultTraceSampler(org.springframework.cloud.sleuth.sampler.SamplerProperties)":[],"order.controller.OrderController.payOrder(order.domain.PayOrderInfo)":[],"config.controller.ConfigController.update(config.domain.Information)":[],"fdse.microservice.controller.StationController.queryById(fdse.microservice.domain.QueryById)":[],"travel2.controller.Travel2Controller.queryAll()":[],"org.springframework.cloud.sleuth.Span.getSavedSpan()":[],"route.controller.RouteController.queryAll()":[],"org.springframework.cloud.sleuth.annotation.SpanTag.value()":[],"login.controller.AccountLoginController.logout(login.domain.LogoutInfo,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.traceRibbonCommandFactoryBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"org.springframework.cloud.sleuth.annotation.SpanTag.key()":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration.traceFeignObjectWrapper(org.springframework.beans.factory.BeanFactory)":[],"assurance.controller.AssuranceController.deleteAssurance(java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration.httpTraceKeysInjector(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys)":[],"sso.controller.AccountSsoController.getAccountById(sso.domain.GetAccountByIdInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyPublicMethodReturningWebAsyncTask()":[],"adminroute.controller.AdminRouteController.addRoute(adminroute.domain.request.CreateAndModifyRouteRequest)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.traceSpringDataBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"order.controller.OrderController.getOrderById(order.domain.GetOrderByIdInfo)":[],"price.controller.PriceController.delete(price.domain.CreateAndModifyPriceConfig)":[],"adminuser.controller.AdminUserController.deleteOrder(adminuser.domain.request.DeleteAccountRequest)":[],"order.controller.OrderController.addcreateNewOrder(order.domain.Order)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyPublicMethodReturningCallable()":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.spanNamer()":[],"price.controller.PriceController.update(price.domain.CreateAndModifyPriceConfig)":[],"execute.controller.ExecuteControlller.collectTicket(execute.domain.TicketExecuteInfo)":[],"route.controller.RouteController.home()":[],"security.controller.SecurityController.update(security.domain.UpdateSecurityConfigInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.defaultSkipPatternBean(org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties)":[],"adminorder.AdminOrderApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"contacts.controller.ContactsController.createNewContacts(contacts.domain.AddContactsInfo,java.lang.String,java.lang.String)":[],"adminbasic.controller.AdminBasicInfoController.getAllContacts(java.lang.String)":[],"inside_payment.InsidePaymentApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"contacts.ContactsApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"train.controller.TrainController.update(train.domain.Information)":[],"food.repository.TrainFoodRepository.findByTripId(java.lang.String)":[],"fdse.microservice.controller.StationController.queryByIdForName(fdse.microservice.domain.QueryById)":[],"com.trainticket.verificationcode.controller.VerificationCodeController.verifyCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyRestControllerAnnotated()":[],"consignprice.controller.ConsignPriceController.modifyPriceConfig(consignprice.domain.PriceConfig)":[],"assurance.repository.AssuranceRepository.findByOrderId(java.util.UUID)":[],"org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig.noOpSpanReporterCounterService()":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.apacheHttpRibbonRequestCustomizer(org.springframework.cloud.sleuth.Tracer)":[],"security.controller.SecurityController.check(security.domain.CheckInfo)":[],"adminuser.controller.AdminUserController.getAllUsers(java.lang.String)":[],"foodsearch.controller.FoodController.cancelFoodOrder(foodsearch.domain.CancelFoodOrderInfo)":[],"contacts.controller.ContactsController.deleteContacts(contacts.domain.DeleteContactsInfo)":[],"login.controller.AccountLoginController.login(login.domain.LoginInfo,java.lang.String,javax.servlet.http.HttpServletResponse)":[],"travel2.controller.Travel2Controller.query(travel2.domain.QueryInfo)":[],"fdse.microservice.controller.StationController.delete(fdse.microservice.domain.Information)":[],"inside_payment.controller.InsidePaymentController.queryAccount()":[],"admintravel.controller.AdminTravelController.addTravel(admintravel.domain.request.AddAndModifyTravelRequest)":[],"assurance.controller.AssuranceController.findAssuranceByOrderId(assurance.domain.FindAssuranceByOrderId)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration$SkipPatternProviderConfig.skipPatternForManagementServerProperties(org.springframework.boot.actuate.autoconfigure.ManagementServerProperties,org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties)":[],"consign.controller.ConsignController.findByAccountId(java.lang.String)":[],"register.controller.AccountRegisterController.createNewAccount(register.domain.RegisterInfo,java.lang.String)":[],"seat.controller.SeatController.create(seat.domain.SeatRequest)":[],"other.controller.OrderOtherController.getOrderPrice(other.domain.GetOrderPrice)":[],"travelplan.TravelPlanApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"route.RouteApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"sso.controller.AccountSsoController.modifyAccount(sso.domain.ModifyAccountInfo)":[],"adminbasic.controller.AdminBasicInfoController.modifyStation(adminbasic.domin.bean.Station)":[],"inside_payment.controller.InsidePaymentController.queryPayment()":[],"sso.repository.AccountRepository.findById(java.util.UUID)":[],"order.controller.OrderController.findAllOrder()":[],"order.OrderApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"adminbasic.controller.AdminBasicInfoController.addConfig(adminbasic.domin.bean.Config)":[],"travel2.controller.Travel2Controller.getTripAllDetailInfo(travel2.domain.GetTripAllDetailInfo)":[],"execute.controller.ExecuteControlller.executeTicket(execute.domain.TicketExecuteInfo)":[],"adminbasic.controller.AdminBasicInfoController.deletePrice(adminbasic.domin.info.PriceInfo)":[],"sso.repository.LoginUserListRepository.findById(java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixAutoConfiguration.sleuthHystrixConcurrencyStrategy(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys)":[],"config.controller.ConfigController.delete(config.domain.Information)":[],"org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration.traceRestTemplateInterceptor(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.instrument.web.HttpSpanInjector,org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector)":[],"org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration.executorBeanPostProcessor()":[],"adminuser.AdminUserApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"plan.controller.RoutePlanController.getCheapestRoutes(plan.domain.GetRoutePlanInfo)":[],"travel2.controller.Travel2Controller.getTripsByRouteId(travel2.domain.GetTripsByRouteIdInfo)":[],"fdse.microservice.controller.BasicController.queryForStationId(fdse.microservice.domain.QueryStation)":[],"sso.repository.LoginUserListRepository.findByloginToken(java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyControllerAnnotated()":[],"config.ConfigApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"order.controller.OrderController.saveOrderInfo(order.domain.ChangeOrderInfo)":[],"route.repository.RouteRepository.findByStartStationIdAndTerminalStationId(java.lang.String,java.lang.String)":[],"foodsearch.controller.FoodController.findAllFoodOrder()":[],"travel.controller.TravelController.queryPackage(travel.domain.QueryInfo)":[],"rebook.RebookApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"assurance.controller.AssuranceController.deleteAssuranceByOrderId(java.lang.String)":[],"foodsearch.controller.FoodController.updateFoodOrder(foodsearch.domain.UpdateFoodOrderInfo)":[],"sso.controller.AccountSsoController.adminDelete(sso.domain.AdminDeleteAccountRequest)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignAspect.feignClientWasCalled(org.aspectj.lang.ProceedingJoinPoint)":[],"adminbasic.controller.AdminBasicInfoController.modifyPrice(adminbasic.domin.info.PriceInfo)":[],"travel2.controller.Travel2Controller.retrieve(travel2.domain.Information2)":[],"travel.controller.TravelController.queryAll()":[],"security.controller.SecurityController.create(security.domain.CreateSecurityConfigInfo)":[],"fdse.microservice.controller.StationController.update(fdse.microservice.domain.Information)":[],"notification.controller.NotificationController.order_cancel_success(notification.domain.NotifyInfo)":[],"security.controller.SecurityController.delete(security.domain.DeleteConfigInfo)":[],"adminbasic.controller.AdminBasicInfoController.addTrain(adminbasic.domin.bean.TrainType)":[],"price.repository.PriceConfigRepository.findById(java.util.UUID)":[],"register.controller.AccountRegisterController.home()":[],"inside_payment.controller.InsidePaymentController.pay(inside_payment.domain.PaymentInfo,javax.servlet.http.HttpServletRequest)":[],"login.LoginApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration.traceAsyncAspect(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys)":[],"org.springframework.cloud.sleuth.Span.getAccumulatedMillis()":[],"other.controller.OrderOtherController.getTicketListByDateAndTripId(other.domain.SeatRequest)":[],"other.controller.OrderOtherController.findAllOrder()":[],"other.OrderOtherApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"preserveOther.controller.PreserveOtherController.preserve(preserveOther.domain.OrderTicketsInfo,java.lang.String,java.lang.String)":[],"admintravel.AdminTravelApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration.noOpTagValueResolver()":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration.reporter(org.springframework.cloud.sleuth.metric.SpanMetricReporter,org.springframework.cloud.sleuth.zipkin.ZipkinProperties,org.springframework.cloud.sleuth.zipkin.ZipkinRestTemplateCustomizer)":[],"security.controller.SecurityController.findAllSecurityConfig()":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration$DiscoveryClientEndpointLocatorConfiguration.zipkinEndpointLocator()":[],"org.springframework.cloud.sleuth.instrument.scheduling.TraceSchedulingAutoConfiguration.traceSchedulingAspect(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,org.springframework.cloud.sleuth.instrument.scheduling.SleuthSchedulingProperties)":[],"consign.controller.ConsignController.insertConsign(consign.domain.ConsignRequest)":[],"admintravel.controller.AdminTravelController.deleteTravel(admintravel.domain.request.DeleteTravelRequest)":[],"travel.controller.TravelController.retrieve(travel.domain.Information2)":[],"adminorder.controller.AdminOrderController.deleteOrder(adminorder.domain.request.DeleteOrderRequest)":[],"food.controller.FoodMapController.getAllTrainFood()":[],"org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig.spanReporterCounterService(org.springframework.boot.actuate.metrics.CounterService,org.springframework.cloud.sleuth.metric.SleuthMetricProperties)":[],"sso.controller.AccountSsoController.login(sso.domain.LoginInfo)":[],"sso.controller.AccountSsoController.verifyLoginToken(java.lang.String)":[],"foodsearch.controller.FoodController.getFood(foodsearch.domain.GetAllFoodOfTripInfo)":[],"fdse.microservice.controller.BasicController.queryForTravel(fdse.microservice.domain.QueryForTravel)":[],"admintravel.controller.AdminTravelController.updateTravel(admintravel.domain.request.AddAndModifyTravelRequest)":[],"rebook.controller.RebookController.rebook(rebook.domain.RebookInfo,java.lang.String,java.lang.String)":[],"sso.controller.AccountSsoController.findAllLoginAccount()":[],"adminbasic.controller.AdminBasicInfoController.getAllPrices(java.lang.String)":[],"price.repository.PriceConfigRepository.findByRouteIdAndTrainType(java.lang.String,java.lang.String)":[],"price.controller.PriceController.queryAll()":[],"org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration.noOpSlf4jSpanLogger()":[],"travel2.controller.Travel2Controller.create(travel2.domain.Information)":[],"adminbasic.controller.AdminBasicInfoController.home()":[],"adminbasic.controller.AdminBasicInfoController.getAllStations(java.lang.String)":[],"order.controller.OrderController.createNewOrder(order.domain.CreateOrderInfo)":[],"travelplan.controller.TravelPlanController.getByCheapest(travelplan.domain.QueryInfo)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$OkHttpClientFeignBeanPostProcessorConfiguration.okHttpFeignClientBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"travel2.controller.Travel2Controller.adminQueryAll()":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration$SkipPatternProviderConfig.defaultSkipPatternBeanIfManagementServerPropsArePresent(org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties)":[],"plan.controller.RoutePlanController.getQuickestRoutes(plan.domain.GetRoutePlanInfo)":[],"order.controller.OrderController.getOrderPrice(order.domain.GetOrderPrice)":[],"seat.controller.SeatController.getLeftTicketOfInterval(seat.domain.SeatRequest)":[],"config.controller.ConfigController.queryAll()":[],"food.repository.FoodStoreRepository.findByStationId(java.lang.String)":[],"org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration.sleuthMetricProperties()":[],"foodsearch.controller.FoodController.findFoodOrderByOrderId(foodsearch.domain.FindByOrderIdInfo)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration.feignBuilder(org.springframework.beans.factory.BeanFactory)":[],"config.controller.ConfigController.query(config.domain.Information2)":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration.zipkinSpanListener(org.springframework.cloud.sleuth.zipkin.ZipkinSpanReporter,org.springframework.cloud.sleuth.zipkin.EndpointLocator,org.springframework.core.env.Environment,java.util.List)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyControllerOrRestControllerWithPublicWebAsyncTaskMethod()":[],"inside_payment.async.AsyncTask.sendAsyncCallToPaymentService(inside_payment.domain.OutsidePaymentInfo)":[],"travelplan.controller.TravelPlanController.getByQuickest(travelplan.domain.QueryInfo)":[],"com.trainticket.controller.PaymentController.addMoney(com.trainticket.domain.AddMoneyInfo)":[],"travel2.controller.Travel2Controller.delete(travel2.domain.Information2)":[],"contacts.controller.ContactsController.getContactsByContactsId(contacts.domain.GetContactsInfo)":[],"route.controller.RouteController.queryByStartAndTerminal(route.domain.GetRouteByStartAndTerminalInfo)":[],"consignprice.controller.ConsignPriceController.getPriceConfig()":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.tracePreZuulFilter(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.instrument.web.HttpSpanInjector,org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector)":[],"execute.ExecuteApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.Span.isRunning()":[],"train.controller.TrainController.retrieve(train.domain.Information2)":[],"adminbasic.controller.AdminBasicInfoController.deleteConfig(adminbasic.domin.info.ConfigInfo2)":[],"sso.controller.AccountSsoController.adminLogin(sso.domain.AdminLoginInfo)":[],"order.controller.OrderController.queryOrders(order.domain.QueryInfo,java.lang.String,java.lang.String)":[],"contacts.controller.ContactsController.home()":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.wrapWebAsyncTaskWithCorrelationId(org.aspectj.lang.ProceedingJoinPoint)":[],"travel.controller.TravelController.query(travel.domain.QueryInfo)":[],"travel2.controller.Travel2Controller.queryPackage(travel2.domain.QueryInfo)":[],"foodsearch.repository.FoodOrderRepository.findByOrderId(java.util.UUID)":[],"train.controller.TrainController.query()":[],"org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration.spelTagValueExpressionResolver()":[],"route.controller.RouteController.queryById(java.lang.String)":[],"fdse.microservice.controller.StationController.exist(fdse.microservice.domain.QueryStation)":[],"adminuser.controller.AdminUserController.updateOrder(adminuser.domain.request.UpdateAccountRequest)":[],"food.FoodMapApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"other.repository.OrderOtherRepository.findByTravelDateAndTrainNumber(java.util.Date,java.lang.String)":[],"contacts.controller.ContactsController.findContactsByAccountId(java.lang.String,java.lang.String)":[],"travel.controller.TravelController.getTripAllDetailInfo(travel.domain.GetTripAllDetailInfo)":[],"assurance.controller.AssuranceController.getAllAssurances()":[],"cancel.async.AsyncTask.drawBackMoneyForOrderCan(java.lang.String,java.lang.String,java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration.httpSpanExtractor(org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties)":[],"notification.controller.NotificationController.order_create_success(notification.domain.NotifyInfo)":[],"train.controller.TrainController.delete(train.domain.Information2)":[],"org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration.spanCreator(org.springframework.cloud.sleuth.Tracer)":[],"config.controller.ConfigController.retrieve(config.domain.Information2)":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.sleuthTracer(org.springframework.cloud.sleuth.Sampler,java.util.Random,org.springframework.cloud.sleuth.SpanNamer,org.springframework.cloud.sleuth.log.SpanLogger,org.springframework.cloud.sleuth.SpanReporter,org.springframework.cloud.sleuth.TraceKeys)":[],"adminuser.controller.AdminUserController.addUser(adminuser.domain.request.AddAccountRequest)":[],"inside_payment.controller.InsidePaymentController.addMoney(inside_payment.domain.AddMoneyInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyHandlerExceptionResolver(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)":[],"login.controller.AccountLoginController.home()":[],"other.repository.OrderOtherRepository.findById(java.util.UUID)":[],"assurance.controller.AssuranceController.createNewAssurance(assurance.domain.AddAssuranceInfo)":[],"food.controller.FoodMapController.home()":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.defaultTraceSampler()":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.markRequestForSpanClosing(org.aspectj.lang.ProceedingJoinPoint,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)":[],"travel2.controller.Travel2Controller.getRouteByTripId(java.lang.String)":[],"order.controller.OrderController.calculateSoldTicket(order.domain.CalculateSoldTicketInfo)":[],"seat.SeatApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"adminbasic.controller.AdminBasicInfoController.addPrice(adminbasic.domin.info.PriceInfo)":[],"consignprice.controller.ConsignPriceController.getPriceInfo()":[],"contacts.controller.ContactsController.modifyContacts(contacts.domain.ModifyContactsInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration.httpSpanInjector()":[],"adminbasic.controller.AdminBasicInfoController.addContacts(adminbasic.domin.bean.Contacts)":[],"assurance.controller.AssuranceController.home()":[],"org.springframework.cloud.sleuth.instrument.async.TraceAsyncAspect.traceThreadPoolTaskExecutor(org.aspectj.lang.ProceedingJoinPoint)":[],"cancel.async.ExecutorConfig.myAsync()":[],"org.springframework.cloud.sleuth.instrument.rxjava.RxJavaAutoConfiguration.sleuthRxJavaSchedulersHook(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,org.springframework.cloud.sleuth.instrument.rxjava.SleuthRxJavaSchedulersProperties)":[],"org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration.init()":[],"adminbasic.controller.AdminBasicInfoController.deleteStation(adminbasic.domin.bean.Station)":[],"food.controller.FoodMapController.getTrainFoodOfTrip(food.domain.QueryTrainFoodInfo)":[],"travel.controller.TravelController.create(travel.domain.Information)":[],"price.controller.PriceController.query(price.domain.QueryPriceConfigByTrainAndRoute)":[],"cancel.controller.CancelController.calculate(cancel.domain.CancelOrderInfo)":[],"org.springframework.cloud.sleuth.Span.nanoTime()":[],"other.controller.OrderOtherController.addcreateNewOrder(other.domain.Order)":[],"order.controller.OrderController.getTicketListByDateAndTripId(order.domain.SeatRequest)":[],"travel.controller.TravelController.update(travel.domain.Information)":[],"adminbasic.AdminBasicInfoApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.randomForSpanIds()":[],"other.controller.OrderOtherController.getOrderById(other.domain.GetOrderByIdInfo)":[],"ticketinfo.TicketInfoApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"order.repository.OrderRepository.findById(java.util.UUID)":[],"org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration.defaultLoggedSpansHandler()":[],"travel.controller.TravelController.getRouteByTripId(java.lang.String)":[],"adminbasic.controller.AdminBasicInfoController.deleteContacts(adminbasic.domin.info.DeleteContactsInfo)":[],"food.controller.FoodMapController.getAllFoodStores()":[],"admintravel.controller.AdminTravelController.getAllTravels(java.lang.String)":[],"route.controller.RouteController.deleteRoute(route.domain.DeleteRouteInfo)":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.defaultSpanAdjuster()":[],"other.queue.MsgReceiver.receiveQueueInfo(other.domain.Order)":[],"ticketinfo.controller.TicketInfoController.queryForStationId(ticketinfo.domain.QueryForStationId)":[],"org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration.sleuthAdvisorConfig()":[],"adminbasic.controller.AdminBasicInfoController.deleteTrain(adminbasic.domin.info.TrainInfo2)":[],"inside_payment.controller.InsidePaymentController.drawBack(inside_payment.domain.DrawBackInfo)":[],"adminroute.controller.AdminRouteController.getAllRoutes(java.lang.String)":[],"org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration.slf4jSpanLogger(org.springframework.cloud.sleuth.log.SleuthSlf4jProperties)":[],"cancel.controller.CancelController.cancelTicket(cancel.domain.CancelOrderInfo,java.lang.String,java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.web.client.TraceWebAsyncClientAutoConfiguration.traceAsyncRestTemplate()":[],"org.springframework.cloud.sleuth.instrument.messaging.TraceSpanMessagingAutoConfiguration.messagingSpanInjector(org.springframework.cloud.sleuth.TraceKeys)":[],"com.trainticket.verificationcode.controller.VerificationCodeController.welcome()":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration.zipkinRestTemplateCustomizer(org.springframework.cloud.sleuth.zipkin.ZipkinProperties)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.traceWebAspect(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,org.springframework.cloud.sleuth.SpanNamer)":[],"sso.controller.AccountSsoController.logoutDeleteToken(sso.domain.LogoutInfo)":[],"notification.controller.NotificationController.preserve_success(notification.domain.NotifyInfo)":[],"foodsearch.controller.FoodController.home()":[],"travel.controller.TravelController.getTrainTypeByTripId(java.lang.String)":[],"com.trainticket.verificationcode.repository.VerificationCodeRepository.findByVerificationCode(java.lang.String)":[],"com.trainticket.controller.PaymentController.pay(com.trainticket.domain.PaymentInfo)":[],"contacts.controller.ContactsController.getAllContacts()":[],"adminbasic.controller.AdminBasicInfoController.modifyContacts(adminbasic.domin.info.ModifyContactsInfo)":[],"fdse.microservice.controller.StationController.queryForId(fdse.microservice.domain.QueryForId)":[],"assurance.controller.AssuranceController.getAllAssuranceType()":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.traceFilter(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration$SkipPatternProvider,org.springframework.cloud.sleuth.SpanReporter,org.springframework.cloud.sleuth.instrument.web.HttpSpanExtractor,org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.traceWebFilter(org.springframework.cloud.sleuth.instrument.web.TraceFilter)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.tracePostZuulFilter(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration.feignHystrixBuilder(org.springframework.beans.factory.BeanFactory)":[],"other.controller.OrderOtherController.updateOrder(other.domain.Order)":[],"org.springframework.cloud.sleuth.annotation.NewSpan.name()":[],"sso.repository.AccountRepository.findByEmail(java.lang.String)":[],"security.repository.SecurityRepository.findByName(java.lang.String)":[],"fdse.microservice.controller.StationController.query()":[],"inside_payment.controller.InsidePaymentController.payDifference(inside_payment.domain.PaymentDifferenceInfo,javax.servlet.http.HttpServletRequest)":[],"cancel.async.ExecutorConfig.mySimpleAsync()":[],"other.controller.OrderOtherController.createNewOrder(other.domain.CreateOrderInfo)":[],"fdse.microservice.controller.StationController.create(fdse.microservice.domain.Information)":[],"com.trainticket.controller.PaymentController.query()":[],"other.controller.OrderOtherController.home()":[],"order.controller.OrderController.modifyOrder(order.domain.ModifyOrderStatusInfo)":[],"preserveOther.PreserveOtherApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.okHttpRibbonRequestCustomizer(org.springframework.cloud.sleuth.Tracer)":[],"consign.controller.ConsignController.updateConsign(consign.domain.ConsignRequest)":[],"consign.ConsignApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.Span.getAccumulatedMicros()":[],"adminbasic.controller.AdminBasicInfoController.getAllConfigs(java.lang.String)":[],"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion(consignprice.domain.GetPriceDomain)":[],"adminorder.controller.AdminOrderController.getAllOrders(java.lang.String)":[],"order.controller.OrderController.home()":[],"other.controller.OrderOtherController.calculateSoldTicket(other.domain.CalculateSoldTicketInfo)":[],"train.controller.TrainController.create(train.domain.Information)":[],"assurance.controller.AssuranceController.modifyAssurance(assurance.domain.ModifyAssuranceInfo)":[],"assurance.AssuranceApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"cancel.async.AsyncTask.updateOtherOrderStatusToCancel(cancel.domain.ChangeOrderInfo)":[],"price.PriceApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"other.controller.OrderOtherController.queryOrders(other.domain.QueryInfo,java.lang.String,java.lang.String)":[],"order.controller.OrderController.updateOrder(order.domain.Order)":[],"inside_payment.controller.InsidePaymentController.createAccount(inside_payment.domain.CreateAccountInfo)":["user"],"preserve.PreserveApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"notification.controller.NotificationController.order_changed_success(notification.domain.NotifyInfo)":[],"security.repository.SecurityRepository.findById(java.util.UUID)":[],"inside_payment.controller.InsidePaymentController.queryAddMoney()":[],"other.controller.OrderOtherController.payOrder(other.domain.PayOrderInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.wrapWithCorrelationId(org.aspectj.lang.ProceedingJoinPoint)":[],"contacts.controller.ContactsController.createNewContactsAdmin(contacts.domain.Contacts)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration.traceFeignAspect(org.springframework.beans.factory.BeanFactory)":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration.zipkinEndpointLocator()":[],"adminroute.controller.AdminRouteController.deleteRoute(adminroute.domain.request.DeleteRouteRequest)":[],"rebook.controller.RebookController.payDifference(rebook.domain.RebookInfo,java.lang.String,java.lang.String)":[],"order.controller.OrderController.deleteOrder(order.domain.DeleteOrderInfo)":[],"travel.controller.TravelController.adminQueryAll()":[],"org.springframework.cloud.sleuth.instrument.messaging.TraceSpringIntegrationAutoConfiguration.traceChannelInterceptor(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,java.util.Random,org.springframework.cloud.sleuth.instrument.messaging.MessagingSpanTextMapExtractor,org.springframework.cloud.sleuth.instrument.messaging.MessagingSpanTextMapInjector)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.traceHandlerMappingBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"security.controller.SecurityController.home()":[],"adminbasic.controller.AdminBasicInfoController.addStation(adminbasic.domin.bean.Station)":[],"sso.controller.AccountSsoController.home()":[],"other.controller.OrderOtherController.modifyOrder(other.domain.ModifyOrderStatusInfo)":[],"order.repository.OrderRepository.findByAccountId(java.util.UUID)":[],"cancel.CancelApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"travel.controller.TravelController.getTripsByRouteId(travel.domain.GetTripsByRouteIdInfo)":[],"route.controller.RouteController.createAndModifyRoute(route.domain.CreateAndModifyRouteInfo)":[],"org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration.noOpSpanReporterCounterService()":[],"consignprice.ConsignPriceApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"preserve.controller.PreserveController.preserve(preserve.domain.OrderTicketsInfo,java.lang.String,java.lang.String)":[],"plan.controller.RoutePlanController.getMinStopStations(plan.domain.GetRoutePlanInfo)":[],"adminbasic.controller.AdminBasicInfoController.getAllTrains(java.lang.String)":[],"com.trainticket.verificationcode.controller.VerificationCodeController.imagecode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)":[],"travel.TravelApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebMvcConfigurer.traceHandlerInterceptor(org.springframework.beans.factory.BeanFactory)":[],"sso.controller.AccountSsoController.createNewAccount(sso.domain.RegisterInfo)":[],"route.repository.RouteRepository.findById(java.lang.String)":[],"other.controller.OrderOtherController.deleteOrder(other.domain.DeleteOrderInfo)":[],"adminbasic.controller.AdminBasicInfoController.modifyConfig(adminbasic.domin.bean.Config)":[],"food.controller.FoodMapController.getFoodStoresOfStation(food.domain.QueryFoodStoresInfo)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.restClientRibbonRequestCustomizer(org.springframework.cloud.sleuth.Tracer)":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.defaultSpanReporter()":[],"org.springframework.cloud.sleuth.annotation.NewSpan.value()":[],"foodsearch.FoodApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"register.RegisterApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[]}
@{"org.springframework.cloud.sleuth.instrument.async.TraceAsyncAspect.traceBackgroundThread(org.aspectj.lang.ProceedingJoinPoint)":[],"travel2.controller.Travel2Controller.getTrainTypeByTripId(java.lang.String)":[],"other.repository.OrderOtherRepository.findByAccountId(java.util.UUID)":[],"consign.controller.ConsignController.findByConsignee(java.lang.String)":[],"foodsearch.controller.FoodController.createFoodOrder(foodsearch.domain.AddFoodOrderInfo)":[],"org.springframework.cloud.sleuth.instrument.messaging.TraceSpanMessagingAutoConfiguration.messagingSpanExtractor()":[],"other.controller.OrderOtherController.saveOrderInfo(other.domain.ChangeOrderInfo)":[],"inside_payment.async.ExecutorConfig.myAsync()":[],"sso.controller.AccountSsoController.findAllAccount()":[],"fdse.microservice.BasicApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"travel.controller.TravelController.delete(travel.domain.Information2)":[],"travel2.Travel2Application.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyControllerOrRestControllerWithPublicAsyncMethod()":[],"inside_payment.async.ExecutorConfig.mySimpleAsync()":[],"config.controller.ConfigController.delete(config.domain.Information2)":[],"order.controller.OrderController.securityInfoCheck(order.domain.GetOrderInfoForSecurity)":[],"ticketinfo.controller.TicketInfoController.queryForTravel(ticketinfo.domain.QueryForTravel)":[],"adminorder.controller.AdminOrderController.updateOrder(adminorder.domain.request.UpdateOrderRequest)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration.feignContextBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"order.repository.OrderRepository.findByTravelDateAndTrainNumber(java.util.Date,java.lang.String)":[],"adminroute.AdminRouteApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"other.controller.OrderOtherController.securityInfoCheck(other.domain.GetOrderInfoForSecurity)":[],"contacts.repository.ContactsRepository.findByAccountId(java.util.UUID)":[],"plan.RoutePlanApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"inside_payment.controller.InsidePaymentController.hello1_callback(java.lang.String)":[],"price.controller.PriceController.create(price.domain.CreateAndModifyPriceConfig)":[],"security.SecurityApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"com.trainticket.verificationcode.repository.VerificationCodeRepository.findByCookie(java.lang.String)":[],"adminbasic.controller.AdminBasicInfoController.modifyTrain(adminbasic.domin.bean.TrainType)":[],"travelplan.controller.TravelPlanController.getTransferResult(travelplan.domain.TransferTravelSearchInfo)":[],"travel2.controller.Travel2Controller.update(travel2.domain.Information)":[],"execute.controller.ExecuteControlller.home()":[],"travelplan.controller.TravelPlanController.getByMinStation(travelplan.domain.QueryInfo)":[],"org.springframework.cloud.sleuth.instrument.scheduling.TraceSchedulingAspect.traceBackgroundThread(org.aspectj.lang.ProceedingJoinPoint)":[],"assurance.controller.AssuranceController.getAssuranceById(assurance.domain.GetAssuranceById,java.lang.String,java.lang.String)":[],"consignprice.repository.ConsignPriceConfigRepository.findByIndex(int)":[],"adminorder.controller.AdminOrderController.addOrder(adminorder.domain.request.AddOrderRequest)":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration.defaultTraceSampler(org.springframework.cloud.sleuth.sampler.SamplerProperties)":[],"order.controller.OrderController.payOrder(order.domain.PayOrderInfo)":[],"config.controller.ConfigController.update(config.domain.Information)":[],"fdse.microservice.controller.StationController.queryById(fdse.microservice.domain.QueryById)":[],"travel2.controller.Travel2Controller.queryAll()":[],"org.springframework.cloud.sleuth.Span.getSavedSpan()":[],"route.controller.RouteController.queryAll()":[],"org.springframework.cloud.sleuth.annotation.SpanTag.value()":[],"login.controller.AccountLoginController.logout(login.domain.LogoutInfo,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.traceRibbonCommandFactoryBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"org.springframework.cloud.sleuth.annotation.SpanTag.key()":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration.traceFeignObjectWrapper(org.springframework.beans.factory.BeanFactory)":[],"assurance.controller.AssuranceController.deleteAssurance(java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration.httpTraceKeysInjector(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys)":[],"sso.controller.AccountSsoController.getAccountById(sso.domain.GetAccountByIdInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyPublicMethodReturningWebAsyncTask()":[],"adminroute.controller.AdminRouteController.addRoute(adminroute.domain.request.CreateAndModifyRouteRequest)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.traceSpringDataBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"order.controller.OrderController.getOrderById(order.domain.GetOrderByIdInfo)":[],"price.controller.PriceController.delete(price.domain.CreateAndModifyPriceConfig)":[],"adminuser.controller.AdminUserController.deleteOrder(adminuser.domain.request.DeleteAccountRequest)":[],"order.controller.OrderController.addcreateNewOrder(order.domain.Order)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyPublicMethodReturningCallable()":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.spanNamer()":[],"price.controller.PriceController.update(price.domain.CreateAndModifyPriceConfig)":[],"execute.controller.ExecuteControlller.collectTicket(execute.domain.TicketExecuteInfo)":[],"route.controller.RouteController.home()":[],"security.controller.SecurityController.update(security.domain.UpdateSecurityConfigInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.defaultSkipPatternBean(org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties)":[],"adminorder.AdminOrderApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"contacts.controller.ContactsController.createNewContacts(contacts.domain.AddContactsInfo,java.lang.String,java.lang.String)":[],"adminbasic.controller.AdminBasicInfoController.getAllContacts(java.lang.String)":[],"inside_payment.InsidePaymentApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"contacts.ContactsApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"train.controller.TrainController.update(train.domain.Information)":[],"food.repository.TrainFoodRepository.findByTripId(java.lang.String)":[],"fdse.microservice.controller.StationController.queryByIdForName(fdse.microservice.domain.QueryById)":[],"com.trainticket.verificationcode.controller.VerificationCodeController.verifyCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyRestControllerAnnotated()":[],"consignprice.controller.ConsignPriceController.modifyPriceConfig(consignprice.domain.PriceConfig)":[],"assurance.repository.AssuranceRepository.findByOrderId(java.util.UUID)":[],"org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig.noOpSpanReporterCounterService()":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.apacheHttpRibbonRequestCustomizer(org.springframework.cloud.sleuth.Tracer)":[],"security.controller.SecurityController.check(security.domain.CheckInfo)":[],"adminuser.controller.AdminUserController.getAllUsers(java.lang.String)":[],"foodsearch.controller.FoodController.cancelFoodOrder(foodsearch.domain.CancelFoodOrderInfo)":[],"contacts.controller.ContactsController.deleteContacts(contacts.domain.DeleteContactsInfo)":[],"login.controller.AccountLoginController.login(login.domain.LoginInfo,java.lang.String,javax.servlet.http.HttpServletResponse)":[],"travel2.controller.Travel2Controller.query(travel2.domain.QueryInfo)":[],"fdse.microservice.controller.StationController.delete(fdse.microservice.domain.Information)":[],"inside_payment.controller.InsidePaymentController.queryAccount()":[],"admintravel.controller.AdminTravelController.addTravel(admintravel.domain.request.AddAndModifyTravelRequest)":[],"assurance.controller.AssuranceController.findAssuranceByOrderId(assurance.domain.FindAssuranceByOrderId)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration$SkipPatternProviderConfig.skipPatternForManagementServerProperties(org.springframework.boot.actuate.autoconfigure.ManagementServerProperties,org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties)":[],"consign.controller.ConsignController.findByAccountId(java.lang.String)":[],"register.controller.AccountRegisterController.createNewAccount(register.domain.RegisterInfo,java.lang.String)":[],"seat.controller.SeatController.create(seat.domain.SeatRequest)":[],"other.controller.OrderOtherController.getOrderPrice(other.domain.GetOrderPrice)":[],"travelplan.TravelPlanApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"route.RouteApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"sso.controller.AccountSsoController.modifyAccount(sso.domain.ModifyAccountInfo)":[],"adminbasic.controller.AdminBasicInfoController.modifyStation(adminbasic.domin.bean.Station)":[],"inside_payment.controller.InsidePaymentController.queryPayment()":[],"sso.repository.AccountRepository.findById(java.util.UUID)":[],"order.controller.OrderController.findAllOrder()":[],"order.OrderApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"adminbasic.controller.AdminBasicInfoController.addConfig(adminbasic.domin.bean.Config)":[],"travel2.controller.Travel2Controller.getTripAllDetailInfo(travel2.domain.GetTripAllDetailInfo)":[],"execute.controller.ExecuteControlller.executeTicket(execute.domain.TicketExecuteInfo)":[],"adminbasic.controller.AdminBasicInfoController.deletePrice(adminbasic.domin.info.PriceInfo)":[],"sso.repository.LoginUserListRepository.findById(java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixAutoConfiguration.sleuthHystrixConcurrencyStrategy(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys)":[],"config.controller.ConfigController.delete(config.domain.Information)":[],"org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration.traceRestTemplateInterceptor(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.instrument.web.HttpSpanInjector,org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector)":[],"org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration.executorBeanPostProcessor()":[],"adminuser.AdminUserApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"plan.controller.RoutePlanController.getCheapestRoutes(plan.domain.GetRoutePlanInfo)":[],"travel2.controller.Travel2Controller.getTripsByRouteId(travel2.domain.GetTripsByRouteIdInfo)":[],"fdse.microservice.controller.BasicController.queryForStationId(fdse.microservice.domain.QueryStation)":[],"sso.repository.LoginUserListRepository.findByloginToken(java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyControllerAnnotated()":[],"config.ConfigApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"order.controller.OrderController.saveOrderInfo(order.domain.ChangeOrderInfo)":[],"route.repository.RouteRepository.findByStartStationIdAndTerminalStationId(java.lang.String,java.lang.String)":[],"foodsearch.controller.FoodController.findAllFoodOrder()":[],"travel.controller.TravelController.queryPackage(travel.domain.QueryInfo)":[],"rebook.RebookApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"assurance.controller.AssuranceController.deleteAssuranceByOrderId(java.lang.String)":[],"foodsearch.controller.FoodController.updateFoodOrder(foodsearch.domain.UpdateFoodOrderInfo)":[],"sso.controller.AccountSsoController.adminDelete(sso.domain.AdminDeleteAccountRequest)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignAspect.feignClientWasCalled(org.aspectj.lang.ProceedingJoinPoint)":[],"adminbasic.controller.AdminBasicInfoController.modifyPrice(adminbasic.domin.info.PriceInfo)":[],"travel2.controller.Travel2Controller.retrieve(travel2.domain.Information2)":[],"travel.controller.TravelController.queryAll()":[],"security.controller.SecurityController.create(security.domain.CreateSecurityConfigInfo)":[],"fdse.microservice.controller.StationController.update(fdse.microservice.domain.Information)":[],"notification.controller.NotificationController.order_cancel_success(notification.domain.NotifyInfo)":[],"security.controller.SecurityController.delete(security.domain.DeleteConfigInfo)":[],"adminbasic.controller.AdminBasicInfoController.addTrain(adminbasic.domin.bean.TrainType)":[],"price.repository.PriceConfigRepository.findById(java.util.UUID)":[],"register.controller.AccountRegisterController.home()":[],"inside_payment.controller.InsidePaymentController.pay(inside_payment.domain.PaymentInfo,javax.servlet.http.HttpServletRequest)":[],"login.LoginApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration.traceAsyncAspect(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys)":[],"org.springframework.cloud.sleuth.Span.getAccumulatedMillis()":[],"other.controller.OrderOtherController.getTicketListByDateAndTripId(other.domain.SeatRequest)":[],"other.controller.OrderOtherController.findAllOrder()":[],"other.OrderOtherApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"preserveOther.controller.PreserveOtherController.preserve(preserveOther.domain.OrderTicketsInfo,java.lang.String,java.lang.String)":[],"admintravel.AdminTravelApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration.noOpTagValueResolver()":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration.reporter(org.springframework.cloud.sleuth.metric.SpanMetricReporter,org.springframework.cloud.sleuth.zipkin.ZipkinProperties,org.springframework.cloud.sleuth.zipkin.ZipkinRestTemplateCustomizer)":[],"security.controller.SecurityController.findAllSecurityConfig()":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration$DiscoveryClientEndpointLocatorConfiguration.zipkinEndpointLocator()":[],"org.springframework.cloud.sleuth.instrument.scheduling.TraceSchedulingAutoConfiguration.traceSchedulingAspect(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,org.springframework.cloud.sleuth.instrument.scheduling.SleuthSchedulingProperties)":[],"consign.controller.ConsignController.insertConsign(consign.domain.ConsignRequest)":[],"admintravel.controller.AdminTravelController.deleteTravel(admintravel.domain.request.DeleteTravelRequest)":[],"travel.controller.TravelController.retrieve(travel.domain.Information2)":[],"adminorder.controller.AdminOrderController.deleteOrder(adminorder.domain.request.DeleteOrderRequest)":[],"food.controller.FoodMapController.getAllTrainFood()":[],"org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig.spanReporterCounterService(org.springframework.boot.actuate.metrics.CounterService,org.springframework.cloud.sleuth.metric.SleuthMetricProperties)":[],"sso.controller.AccountSsoController.login(sso.domain.LoginInfo)":[],"sso.controller.AccountSsoController.verifyLoginToken(java.lang.String)":[],"foodsearch.controller.FoodController.getFood(foodsearch.domain.GetAllFoodOfTripInfo)":[],"fdse.microservice.controller.BasicController.queryForTravel(fdse.microservice.domain.QueryForTravel)":[],"admintravel.controller.AdminTravelController.updateTravel(admintravel.domain.request.AddAndModifyTravelRequest)":[],"rebook.controller.RebookController.rebook(rebook.domain.RebookInfo,java.lang.String,java.lang.String)":[],"sso.controller.AccountSsoController.findAllLoginAccount()":[],"adminbasic.controller.AdminBasicInfoController.getAllPrices(java.lang.String)":[],"price.repository.PriceConfigRepository.findByRouteIdAndTrainType(java.lang.String,java.lang.String)":[],"price.controller.PriceController.queryAll()":[],"org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration.noOpSlf4jSpanLogger()":[],"travel2.controller.Travel2Controller.create(travel2.domain.Information)":[],"adminbasic.controller.AdminBasicInfoController.home()":[],"adminbasic.controller.AdminBasicInfoController.getAllStations(java.lang.String)":[],"order.controller.OrderController.createNewOrder(order.domain.CreateOrderInfo)":[],"travelplan.controller.TravelPlanController.getByCheapest(travelplan.domain.QueryInfo)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$OkHttpClientFeignBeanPostProcessorConfiguration.okHttpFeignClientBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"travel2.controller.Travel2Controller.adminQueryAll()":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration$SkipPatternProviderConfig.defaultSkipPatternBeanIfManagementServerPropsArePresent(org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties)":[],"plan.controller.RoutePlanController.getQuickestRoutes(plan.domain.GetRoutePlanInfo)":[],"order.controller.OrderController.getOrderPrice(order.domain.GetOrderPrice)":[],"seat.controller.SeatController.getLeftTicketOfInterval(seat.domain.SeatRequest)":[],"config.controller.ConfigController.queryAll()":[],"food.repository.FoodStoreRepository.findByStationId(java.lang.String)":[],"org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration.sleuthMetricProperties()":[],"foodsearch.controller.FoodController.findFoodOrderByOrderId(foodsearch.domain.FindByOrderIdInfo)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration.feignBuilder(org.springframework.beans.factory.BeanFactory)":[],"config.controller.ConfigController.query(config.domain.Information2)":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration.zipkinSpanListener(org.springframework.cloud.sleuth.zipkin.ZipkinSpanReporter,org.springframework.cloud.sleuth.zipkin.EndpointLocator,org.springframework.core.env.Environment,java.util.List)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyControllerOrRestControllerWithPublicWebAsyncTaskMethod()":[],"inside_payment.async.AsyncTask.sendAsyncCallToPaymentService(inside_payment.domain.OutsidePaymentInfo)":[],"travelplan.controller.TravelPlanController.getByQuickest(travelplan.domain.QueryInfo)":[],"com.trainticket.controller.PaymentController.addMoney(com.trainticket.domain.AddMoneyInfo)":[],"travel2.controller.Travel2Controller.delete(travel2.domain.Information2)":[],"contacts.controller.ContactsController.getContactsByContactsId(contacts.domain.GetContactsInfo)":[],"route.controller.RouteController.queryByStartAndTerminal(route.domain.GetRouteByStartAndTerminalInfo)":[],"consignprice.controller.ConsignPriceController.getPriceConfig()":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.tracePreZuulFilter(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.instrument.web.HttpSpanInjector,org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector)":[],"execute.ExecuteApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.Span.isRunning()":[],"train.controller.TrainController.retrieve(train.domain.Information2)":[],"adminbasic.controller.AdminBasicInfoController.deleteConfig(adminbasic.domin.info.ConfigInfo2)":[],"sso.controller.AccountSsoController.adminLogin(sso.domain.AdminLoginInfo)":[],"order.controller.OrderController.queryOrders(order.domain.QueryInfo,java.lang.String,java.lang.String)":[],"contacts.controller.ContactsController.home()":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.wrapWebAsyncTaskWithCorrelationId(org.aspectj.lang.ProceedingJoinPoint)":[],"travel.controller.TravelController.query(travel.domain.QueryInfo)":[],"travel2.controller.Travel2Controller.queryPackage(travel2.domain.QueryInfo)":[],"foodsearch.repository.FoodOrderRepository.findByOrderId(java.util.UUID)":[],"train.controller.TrainController.query()":[],"org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration.spelTagValueExpressionResolver()":[],"route.controller.RouteController.queryById(java.lang.String)":[],"fdse.microservice.controller.StationController.exist(fdse.microservice.domain.QueryStation)":[],"adminuser.controller.AdminUserController.updateOrder(adminuser.domain.request.UpdateAccountRequest)":[],"food.FoodMapApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"other.repository.OrderOtherRepository.findByTravelDateAndTrainNumber(java.util.Date,java.lang.String)":[],"contacts.controller.ContactsController.findContactsByAccountId(java.lang.String,java.lang.String)":[],"travel.controller.TravelController.getTripAllDetailInfo(travel.domain.GetTripAllDetailInfo)":[],"assurance.controller.AssuranceController.getAllAssurances()":[],"cancel.async.AsyncTask.drawBackMoneyForOrderCan(java.lang.String,java.lang.String,java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration.httpSpanExtractor(org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties)":[],"notification.controller.NotificationController.order_create_success(notification.domain.NotifyInfo)":[],"train.controller.TrainController.delete(train.domain.Information2)":[],"org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration.spanCreator(org.springframework.cloud.sleuth.Tracer)":[],"config.controller.ConfigController.retrieve(config.domain.Information2)":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.sleuthTracer(org.springframework.cloud.sleuth.Sampler,java.util.Random,org.springframework.cloud.sleuth.SpanNamer,org.springframework.cloud.sleuth.log.SpanLogger,org.springframework.cloud.sleuth.SpanReporter,org.springframework.cloud.sleuth.TraceKeys)":[],"adminuser.controller.AdminUserController.addUser(adminuser.domain.request.AddAccountRequest)":[],"inside_payment.controller.InsidePaymentController.addMoney(inside_payment.domain.AddMoneyInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.anyHandlerExceptionResolver(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)":[],"login.controller.AccountLoginController.home()":[],"other.repository.OrderOtherRepository.findById(java.util.UUID)":[],"assurance.controller.AssuranceController.createNewAssurance(assurance.domain.AddAssuranceInfo)":[],"food.controller.FoodMapController.home()":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.defaultTraceSampler()":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.markRequestForSpanClosing(org.aspectj.lang.ProceedingJoinPoint,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)":[],"travel2.controller.Travel2Controller.getRouteByTripId(java.lang.String)":[],"order.controller.OrderController.calculateSoldTicket(order.domain.CalculateSoldTicketInfo)":[],"seat.SeatApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"adminbasic.controller.AdminBasicInfoController.addPrice(adminbasic.domin.info.PriceInfo)":[],"consignprice.controller.ConsignPriceController.getPriceInfo()":[],"contacts.controller.ContactsController.modifyContacts(contacts.domain.ModifyContactsInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration.httpSpanInjector()":[],"adminbasic.controller.AdminBasicInfoController.addContacts(adminbasic.domin.bean.Contacts)":[],"assurance.controller.AssuranceController.home()":[],"org.springframework.cloud.sleuth.instrument.async.TraceAsyncAspect.traceThreadPoolTaskExecutor(org.aspectj.lang.ProceedingJoinPoint)":[],"cancel.async.ExecutorConfig.myAsync()":[],"org.springframework.cloud.sleuth.instrument.rxjava.RxJavaAutoConfiguration.sleuthRxJavaSchedulersHook(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,org.springframework.cloud.sleuth.instrument.rxjava.SleuthRxJavaSchedulersProperties)":[],"org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration.init()":[],"adminbasic.controller.AdminBasicInfoController.deleteStation(adminbasic.domin.bean.Station)":[],"food.controller.FoodMapController.getTrainFoodOfTrip(food.domain.QueryTrainFoodInfo)":[],"travel.controller.TravelController.create(travel.domain.Information)":[],"price.controller.PriceController.query(price.domain.QueryPriceConfigByTrainAndRoute)":[],"cancel.controller.CancelController.calculate(cancel.domain.CancelOrderInfo)":[],"org.springframework.cloud.sleuth.Span.nanoTime()":[],"other.controller.OrderOtherController.addcreateNewOrder(other.domain.Order)":[],"order.controller.OrderController.getTicketListByDateAndTripId(order.domain.SeatRequest)":[],"travel.controller.TravelController.update(travel.domain.Information)":[],"adminbasic.AdminBasicInfoApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.randomForSpanIds()":[],"other.controller.OrderOtherController.getOrderById(other.domain.GetOrderByIdInfo)":[],"ticketinfo.TicketInfoApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"order.repository.OrderRepository.findById(java.util.UUID)":[],"org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration.defaultLoggedSpansHandler()":[],"travel.controller.TravelController.getRouteByTripId(java.lang.String)":[],"adminbasic.controller.AdminBasicInfoController.deleteContacts(adminbasic.domin.info.DeleteContactsInfo)":[],"food.controller.FoodMapController.getAllFoodStores()":[],"admintravel.controller.AdminTravelController.getAllTravels(java.lang.String)":[],"route.controller.RouteController.deleteRoute(route.domain.DeleteRouteInfo)":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.defaultSpanAdjuster()":[],"other.queue.MsgReceiver.receiveQueueInfo(other.domain.Order)":[],"ticketinfo.controller.TicketInfoController.queryForStationId(ticketinfo.domain.QueryForStationId)":[],"org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration.sleuthAdvisorConfig()":[],"adminbasic.controller.AdminBasicInfoController.deleteTrain(adminbasic.domin.info.TrainInfo2)":[],"inside_payment.controller.InsidePaymentController.drawBack(inside_payment.domain.DrawBackInfo)":[],"adminroute.controller.AdminRouteController.getAllRoutes(java.lang.String)":[],"org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration.slf4jSpanLogger(org.springframework.cloud.sleuth.log.SleuthSlf4jProperties)":[],"cancel.controller.CancelController.cancelTicket(cancel.domain.CancelOrderInfo,java.lang.String,java.lang.String)":[],"org.springframework.cloud.sleuth.instrument.web.client.TraceWebAsyncClientAutoConfiguration.traceAsyncRestTemplate()":[],"org.springframework.cloud.sleuth.instrument.messaging.TraceSpanMessagingAutoConfiguration.messagingSpanInjector(org.springframework.cloud.sleuth.TraceKeys)":[],"com.trainticket.verificationcode.controller.VerificationCodeController.welcome()":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration.zipkinRestTemplateCustomizer(org.springframework.cloud.sleuth.zipkin.ZipkinProperties)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.traceWebAspect(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,org.springframework.cloud.sleuth.SpanNamer)":[],"sso.controller.AccountSsoController.logoutDeleteToken(sso.domain.LogoutInfo)":[],"notification.controller.NotificationController.preserve_success(notification.domain.NotifyInfo)":[],"foodsearch.controller.FoodController.home()":[],"travel.controller.TravelController.getTrainTypeByTripId(java.lang.String)":[],"com.trainticket.verificationcode.repository.VerificationCodeRepository.findByVerificationCode(java.lang.String)":[],"com.trainticket.controller.PaymentController.pay(com.trainticket.domain.PaymentInfo)":[],"contacts.controller.ContactsController.getAllContacts()":[],"adminbasic.controller.AdminBasicInfoController.modifyContacts(adminbasic.domin.info.ModifyContactsInfo)":[],"fdse.microservice.controller.StationController.queryForId(fdse.microservice.domain.QueryForId)":[],"assurance.controller.AssuranceController.getAllAssuranceType()":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.traceFilter(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration$SkipPatternProvider,org.springframework.cloud.sleuth.SpanReporter,org.springframework.cloud.sleuth.instrument.web.HttpSpanExtractor,org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration.traceWebFilter(org.springframework.cloud.sleuth.instrument.web.TraceFilter)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.tracePostZuulFilter(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration.feignHystrixBuilder(org.springframework.beans.factory.BeanFactory)":[],"other.controller.OrderOtherController.updateOrder(other.domain.Order)":[],"org.springframework.cloud.sleuth.annotation.NewSpan.name()":[],"sso.repository.AccountRepository.findByEmail(java.lang.String)":[],"security.repository.SecurityRepository.findByName(java.lang.String)":[],"fdse.microservice.controller.StationController.query()":[],"inside_payment.controller.InsidePaymentController.payDifference(inside_payment.domain.PaymentDifferenceInfo,javax.servlet.http.HttpServletRequest)":[],"cancel.async.ExecutorConfig.mySimpleAsync()":[],"other.controller.OrderOtherController.createNewOrder(other.domain.CreateOrderInfo)":[],"fdse.microservice.controller.StationController.create(fdse.microservice.domain.Information)":[],"com.trainticket.controller.PaymentController.query()":[],"other.controller.OrderOtherController.home()":[],"order.controller.OrderController.modifyOrder(order.domain.ModifyOrderStatusInfo)":[],"preserveOther.PreserveOtherApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.okHttpRibbonRequestCustomizer(org.springframework.cloud.sleuth.Tracer)":[],"consign.controller.ConsignController.updateConsign(consign.domain.ConsignRequest)":[],"consign.ConsignApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.Span.getAccumulatedMicros()":[],"adminbasic.controller.AdminBasicInfoController.getAllConfigs(java.lang.String)":[],"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion(consignprice.domain.GetPriceDomain)":[],"adminorder.controller.AdminOrderController.getAllOrders(java.lang.String)":[],"order.controller.OrderController.home()":[],"other.controller.OrderOtherController.calculateSoldTicket(other.domain.CalculateSoldTicketInfo)":[],"train.controller.TrainController.create(train.domain.Information)":[],"assurance.controller.AssuranceController.modifyAssurance(assurance.domain.ModifyAssuranceInfo)":[],"assurance.AssuranceApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"cancel.async.AsyncTask.updateOtherOrderStatusToCancel(cancel.domain.ChangeOrderInfo)":[],"price.PriceApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"other.controller.OrderOtherController.queryOrders(other.domain.QueryInfo,java.lang.String,java.lang.String)":[],"order.controller.OrderController.updateOrder(order.domain.Order)":[],"inside_payment.controller.InsidePaymentController.createAccount(inside_payment.domain.CreateAccountInfo)":["inside_payment.service.InsidePaymentService.createAccount(inside_payment.domain.CreateAccountInfo)"],"preserve.PreserveApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"notification.controller.NotificationController.order_changed_success(notification.domain.NotifyInfo)":[],"security.repository.SecurityRepository.findById(java.util.UUID)":[],"inside_payment.controller.InsidePaymentController.queryAddMoney()":[],"other.controller.OrderOtherController.payOrder(other.domain.PayOrderInfo)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebAspect.wrapWithCorrelationId(org.aspectj.lang.ProceedingJoinPoint)":[],"contacts.controller.ContactsController.createNewContactsAdmin(contacts.domain.Contacts)":[],"org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration.traceFeignAspect(org.springframework.beans.factory.BeanFactory)":[],"org.springframework.cloud.sleuth.zipkin.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration.zipkinEndpointLocator()":[],"adminroute.controller.AdminRouteController.deleteRoute(adminroute.domain.request.DeleteRouteRequest)":[],"rebook.controller.RebookController.payDifference(rebook.domain.RebookInfo,java.lang.String,java.lang.String)":[],"order.controller.OrderController.deleteOrder(order.domain.DeleteOrderInfo)":[],"travel.controller.TravelController.adminQueryAll()":[],"org.springframework.cloud.sleuth.instrument.messaging.TraceSpringIntegrationAutoConfiguration.traceChannelInterceptor(org.springframework.cloud.sleuth.Tracer,org.springframework.cloud.sleuth.TraceKeys,java.util.Random,org.springframework.cloud.sleuth.instrument.messaging.MessagingSpanTextMapExtractor,org.springframework.cloud.sleuth.instrument.messaging.MessagingSpanTextMapInjector)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.traceHandlerMappingBeanPostProcessor(org.springframework.beans.factory.BeanFactory)":[],"security.controller.SecurityController.home()":[],"adminbasic.controller.AdminBasicInfoController.addStation(adminbasic.domin.bean.Station)":[],"sso.controller.AccountSsoController.home()":[],"other.controller.OrderOtherController.modifyOrder(other.domain.ModifyOrderStatusInfo)":[],"order.repository.OrderRepository.findByAccountId(java.util.UUID)":[],"cancel.CancelApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"travel.controller.TravelController.getTripsByRouteId(travel.domain.GetTripsByRouteIdInfo)":[],"route.controller.RouteController.createAndModifyRoute(route.domain.CreateAndModifyRouteInfo)":[],"org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration.noOpSpanReporterCounterService()":[],"consignprice.ConsignPriceApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"preserve.controller.PreserveController.preserve(preserve.domain.OrderTicketsInfo,java.lang.String,java.lang.String)":[],"plan.controller.RoutePlanController.getMinStopStations(plan.domain.GetRoutePlanInfo)":[],"adminbasic.controller.AdminBasicInfoController.getAllTrains(java.lang.String)":[],"com.trainticket.verificationcode.controller.VerificationCodeController.imagecode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)":[],"travel.TravelApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"org.springframework.cloud.sleuth.instrument.web.TraceWebMvcConfigurer.traceHandlerInterceptor(org.springframework.beans.factory.BeanFactory)":[],"sso.controller.AccountSsoController.createNewAccount(sso.domain.RegisterInfo)":[],"route.repository.RouteRepository.findById(java.lang.String)":[],"other.controller.OrderOtherController.deleteOrder(other.domain.DeleteOrderInfo)":[],"adminbasic.controller.AdminBasicInfoController.modifyConfig(adminbasic.domin.bean.Config)":[],"food.controller.FoodMapController.getFoodStoresOfStation(food.domain.QueryFoodStoresInfo)":[],"org.springframework.cloud.sleuth.instrument.zuul.TraceZuulAutoConfiguration.restClientRibbonRequestCustomizer(org.springframework.cloud.sleuth.Tracer)":[],"org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration.defaultSpanReporter()":[],"org.springframework.cloud.sleuth.annotation.NewSpan.value()":[],"foodsearch.FoodApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[],"register.RegisterApplication.restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)":[]}
